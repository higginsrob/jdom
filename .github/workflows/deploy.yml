name: Deploy to GitHub Pages

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Demo Site
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: npm ci

      - name: Build production bundle
        run: npm run build

      - name: Create demo site
        run: |
          mkdir -p _site
          cp -r dist/* _site/
          cp test/template.html _site/index.html
          
          # Update the template to use the built jdom.js
          sed -i 's|<head>|<head><script src="./jdom.js"></script>|' _site/index.html
          
          # Copy README styling if it exists
          if [ -f "README/style.css" ]; then
            cp README/style.css _site/
          fi
          
          # Create a simple landing page
          cat > _site/demo.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>JDOM.js Demo</title>
              <script src="./jdom.js"></script>
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                      line-height: 1.6;
                      margin: 0;
                      padding: 20px;
                      background: #f5f5f5;
                  }
                  .container {
                      max-width: 800px;
                      margin: 0 auto;
                      background: white;
                      padding: 30px;
                      border-radius: 8px;
                      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                  }
                  .demo-section {
                      margin: 30px 0;
                      padding: 20px;
                      border: 1px solid #eee;
                      border-radius: 4px;
                  }
                  h1, h2 { color: #333; }
                  .highlight { background: #fff3cd; padding: 2px 4px; border-radius: 2px; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>üöÄ JDOM.js Live Demo</h1>
                  <p>A lightweight DOM builder library with zero dependencies.</p>
                  
                  <div class="demo-section">
                      <h2>Interactive Demo</h2>
                      <div id="demo-container"></div>
                  </div>
                  
                  <div class="demo-section">
                      <h2>Links</h2>
                      <ul>
                          <li><a href="https://github.com/higginsrob/jdom">üìö Documentation</a></li>
                          <li><a href="https://www.npmjs.com/package/jdom">üì¶ NPM Package</a></li>
                          <li><a href="./index.html">üß™ Test Suite</a></li>
                      </ul>
                  </div>
              </div>
              
              <script>
                  // Demo the library
                  const { domFactory, svgFactory } = window.jdom;
                  const { DIV, BUTTON, INPUT, SPAN } = domFactory;
                  const { svg, circle, rect } = svgFactory;
                  
                  const container = document.getElementById('demo-container');
                  
                  // Interactive button demo
                  let clickCount = 0;
                  const button = BUTTON({
                      parent: container,
                      textContent: 'Click me!',
                      style: {
                          backgroundColor: '#007bff',
                          color: 'white',
                          padding: '10px 20px',
                          border: 'none',
                          borderRadius: '4px',
                          cursor: 'pointer',
                          margin: '10px 0'
                      },
                      click: function() {
                          clickCount++;
                          this.textContent = \`Clicked \${clickCount} times!\`;
                          this.style.backgroundColor = clickCount % 2 ? '#28a745' : '#007bff';
                      }
                  });
                  
                  // SVG demo
                  const demoSVG = svg({
                      parent: container,
                      width: 200,
                      height: 100,
                      style: { border: '1px solid #ddd', margin: '10px 0' },
                      children: [
                          rect({ fill: '#e9ecef', width: 200, height: 100 }),
                          circle({ cx: 50, cy: 50, r: 20, fill: '#007bff' }),
                          circle({ cx: 150, cy: 50, r: 20, fill: '#28a745' })
                      ]
                  });
                  
                  // Form demo
                  const form = DIV({
                      parent: container,
                      style: { marginTop: '20px' },
                      children: [
                          DIV({
                              children: [
                                  'Name: ',
                                  INPUT({
                                      type: 'text',
                                      placeholder: 'Enter your name',
                                      style: { margin: '0 10px', padding: '5px' }
                                  })
                              ]
                          })
                      ]
                  });
              </script>
          </body>
          </html>
          EOF

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  deploy:
    name: Deploy to Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Post deployment info
        run: |
          echo "üåê Demo site deployed successfully!"
          echo "üîó URL: ${{ steps.deployment.outputs.page_url }}"